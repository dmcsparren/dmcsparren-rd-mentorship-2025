version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Current directory:" && pwd
        - echo "Listing all directories:"
        - ls -la
        - echo "Checking if kolsch-main exists:"
        - ls -la | grep kolsch || echo "kolsch-main not found"
        - echo "Checking if package.json exists in current directory:"
        - ls -la package.json || echo "package.json not found in current directory"
        - echo "Checking if package.json exists in kolsch-main:"
        - ls -la kolsch-main/package.json || echo "package.json not found in kolsch-main"
        - echo "Determining correct application directory..."
        - |
          if [ -f "kolsch-main/package.json" ]; then
            echo "Found package.json in kolsch-main, will navigate there for build..."
            export APP_DIR="kolsch-main"
          elif [ -f "package.json" ]; then
            echo "Found package.json in current directory, will stay here..."
            export APP_DIR="."
          else
            echo "ERROR: No package.json found!"
            exit 1
          fi
        - echo "Installing dependencies..."
        - |
          if [ "$APP_DIR" = "kolsch-main" ]; then
            cd kolsch-main && npm ci
          else
            npm ci
          fi
        - echo "Node version:" && node --version
        - echo "NPM version:" && npm --version
    build:
      commands:
        - echo "Starting build process..."
        - |
          if [ -f "kolsch-main/package.json" ]; then
            echo "Building in kolsch-main directory..."
            cd kolsch-main
            npm run build
            echo "Build completed, copying to root build directory..."
            cd ..
            mkdir -p build
            cp -r kolsch-main/dist/* build/ 2>/dev/null || cp -r kolsch-main/build/* build/ 2>/dev/null || echo "No dist or build folder found"
          else
            echo "Building in current directory..."
            npm run build
            mkdir -p build
            cp -r dist/* build/ 2>/dev/null || cp -r build/* build/ 2>/dev/null || echo "Build folder already exists"
          fi
        - echo "Build output directory contents:"
        - ls -la build/
  artifacts:
    baseDirectory: build
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - kolsch-main/node_modules/**/*
      - dist/**/*
      - kolsch-main/dist/**/*
      - build/**/*